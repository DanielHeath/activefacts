
module Concernz
  module Booking
    extend ActiveSupport::Concern
    included do
      self.primary_key = 'booking_id'

      # Booking (in which Person booked Showing for Number of seats) and Showing (in which Cinema shows Film on Date Time)
      belongs_to :cinema_via_showing, :class_name => 'Cinema', :foreign_key => :showing_cinema_id

      # Booking (in which Person booked Showing for Number of seats) and Showing (in which Cinema shows Film on Date Time)
      belongs_to :film_via_showing, :class_name => 'Film', :foreign_key => :showing_film_id

      # Booking (in which Person booked Showing for Number of seats)
      belongs_to :person

      # Seat Allocation (in which Booking has allocated-Seat)
      has_many :seat_allocations, :class_name => 'SeatAllocation', :foreign_key => :booking_id, :dependent => :destroy
      has_many :seats, :through => :seat_allocations

      validates :number, :presence => true
      validates :person_id, :presence => true
      validates :showing_cinema_id, :presence => true
      validates :showing_film_id, :presence => true
      validates :showing_date_time_value, :presence => true
    end
  end
end

module Concernz
  module Cinema
    extend ActiveSupport::Concern
    included do
      self.primary_key = 'cinema_id'

      # Booking (in which Person booked Showing for Number of seats) and Showing (in which Cinema shows Film on Date Time)
      has_many :bookings_via_showing, :class_name => 'Booking', :foreign_key => :showing_cinema_id, :dependent => :destroy
      has_many :films, :through => :bookings_via_showing
      has_many :date_times, :through => :bookings_via_showing

      # Seat is in Row and Row is in Cinema
      has_many :seats_via_row, :class_name => 'Seat', :foreign_key => :row_cinema_id, :dependent => :destroy
      has_many :row_nrs, :through => :seats_via_row
    end
  end
end

module Concernz
  module Film
    extend ActiveSupport::Concern
    included do
      self.primary_key = 'film_id'

      # Booking (in which Person booked Showing for Number of seats) and Showing (in which Cinema shows Film on Date Time)
      has_many :bookings_via_showing, :class_name => 'Booking', :foreign_key => :showing_film_id, :dependent => :destroy
      has_many :cinemas, :through => :bookings_via_showing
      has_many :date_times, :through => :bookings_via_showing
    end
  end
end

module Concernz
  module Person
    extend ActiveSupport::Concern
    included do
      self.primary_key = 'person_id'

      # Booking (in which Person booked Showing for Number of seats)
      has_many :bookings, :class_name => 'Booking', :foreign_key => :person_id, :dependent => :destroy

      validates :login_name, :presence => true
    end
  end
end

module Concernz
  module Seat
    extend ActiveSupport::Concern
    included do
      self.primary_key = 'seat_id'

      # Seat is in Row and Row is in Cinema
      belongs_to :cinema_via_row, :class_name => 'Cinema', :foreign_key => :row_cinema_id

      # Seat Allocation (in which Booking has allocated-Seat)
      has_many :seat_allocations, :class_name => 'SeatAllocation', :foreign_key => :allocated_seat_id, :dependent => :destroy
      has_many :bookings, :through => :seat_allocations

      validates :row_cinema_id, :presence => true
      validates :row_nr, :presence => true
      validates :seat_number, :presence => true
    end
  end
end

module Concernz
  module SeatAllocation
    extend ActiveSupport::Concern
    included do
      # Seat Allocation (in which Booking has allocated-Seat)
      belongs_to :booking

      # Seat Allocation (in which Booking has allocated-Seat)
      belongs_to :allocated_seat, :class_name => 'Seat', :foreign_key => :allocated_seat_id

      validates :booking_id, :presence => true
      validates :allocated_seat_id, :presence => true
    end
  end
end
